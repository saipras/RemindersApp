name: PR Lint

on:
  pull_request:
    types: [opened, edited, reopened, synchronize]

jobs:
  pr-lint:
    runs-on: ubuntu-latest

    steps:
      - name: Validate Branch Name
        run: |
          # Validate if the branch name follows the pattern 'feature/<ticket-id>', 'hotfix/<ticket-id>', or 'release/<ticket-id>'
          if [[ ! "${{ github.head_ref }}" =~ ^((feature|hotfix|release)/[a-zA-Z0-9-_]+-\d+)|([a-zA-Z0-9-_]+-\d+/(feature|hotfix|release)))$ ]]; then
            echo "❌ Invalid branch name: ${{ github.head_ref }}"
            echo "Branch names must follow one of these formats:"
            echo "- feature/<ticket-number> (e.g., feature/abc-300)"
            echo "- hotfix/<ticket-number> (e.g., hotfix/abc-300)"
            echo "- release/<ticket-number> (e.g., release/aav-222)"
            echo "- <ticket-number>/feature (e.g., abc-300/feature)"
            echo "- <ticket-number>/hotfix (e.g., abc-300/hotfix)"
            echo "- <ticket-number>/release (e.g., aav-222/release)"
            exit 1
          else
            echo "✅ Valid branch name: ${{ github.head_ref }}"
          fi

      # PR Title Linter
      - name: PR Title Linter
        uses: morrisoncole/pr-lint-action@v1.7.1
        with:
          repo-token: "${{ secrets.GITHUB_TOKEN }}"
          title-regex: '^(\[(\w+-\d+)\]\s*)+(Add|Remove|Change|Breaking Change|Fix|Release) .+$'
          on-failed-regex-fail-action: true
          on-failed-regex-create-review: true
          on-failed-regex-request-changes: false
          on-failed-regex-comment: |
            The PR title must follow this format:
            ```
            [TICKET-ID] {Add|Remove|Change|Breaking Change|Fix|Release} The rest of the title
            ```
            Example: `[abc-300] Add new feature to improve performance`
          on-succeeded-regex-dismiss-review-comment: "Awesome! The PR title is correct and matches the format. Success!"
